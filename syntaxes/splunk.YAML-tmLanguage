# [PackageDev] target_format: plist, ext: tmLanguage
name: Splunk
scopeName: source.ini
fileTypes: [conf, conf.example, conf.default, conf.spec, conf.in, conf.example.in,
  conf.spec.in, cfg.spec.in]

patterns:
- comment: default conf file warning
  name: invalid.illegal
  match: ^# DO NOT EDIT THIS FILE\!$

- begin: (^[ \t]+)?(?=#)
  beginCaptures:
    '1': {name: punctuation.whitespace.comment.leading.splunk}
  end: (?!\G)
  patterns:
  - name: comment.line.number-sign.splunk
    begin: '#'
    beginCaptures:
      '0': {name: punctuation.definition.comment.splunk}
    end: \n

- begin: (^[ \t]+)?(?=;)
  beginCaptures:
    '1': {name: punctuation.whitespace.comment.leading.splunk}
  end: (?!\G)
  patterns:
  - name: comment.line.semicolon.splunk
    begin: ;
    beginCaptures:
      '0': {name: punctuation.definition.comment.splunk}
    end: \n

- match: \b([a-zA-Z0-9_.-]+)\b\s*(=)
  captures:
    '1': {name: keyword.other.definition.splunk}
    '2': {name: punctuation.separator.key-value.splunk}

- name: entity.name.section.group-title.splunk
  match: ^(\[)(.*?)(\])
  captures:
    '1': {name: punctuation.definition.entity.splunk}
    '3': {name: punctuation.definition.entity.splunk}

- name: string.quoted.single.splunk
  begin: ''''
  beginCaptures:
    '0': {name: punctuation.definition.string.begin.splunk}
  end: ''''
  endCaptures:
    '0': {name: punctuation.definition.string.end.splunk}
  patterns:
  - name: constant.character.escape.splunk
    match: \\.

- name: string.quoted.double.splunk
  begin: '"'
  beginCaptures:
    '0': {name: punctuation.definition.string.begin.splunk}
  end: '"'
  endCaptures:
    '0': {name: punctuation.definition.string.end.splunk}
keyEquivalent: ^~I